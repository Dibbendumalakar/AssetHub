{
  "contractName": "VehicleRenting",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vehicleIsRented",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vehicleOwners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vehicleRenters",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vehicleId",
          "type": "uint256"
        }
      ],
      "name": "rentVehicle",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vehicleId",
          "type": "uint256"
        }
      ],
      "name": "endVehicleRent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vehicleId\",\"type\":\"uint256\"}],\"name\":\"endVehicleRent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vehicleId\",\"type\":\"uint256\"}],\"name\":\"rentVehicle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vehicleIsRented\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vehicleOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vehicleRenters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/VehicleRenting.sol\":\"VehicleRenting\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/VehicleRenting.sol\":{\"keccak256\":\"0x2df7d0363b29e39ef13344dd8e8e3f8e582f8691c38227f380a0edd79047402d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89890833f1ff3f04d3f93bcff334fc6c441a99a5aa2291bae1156a770ab5a03f\",\"dweb:/ipfs/QmdaCjjJ9iK2skYPb74Ahc47j9ohs5G2X1xNYvQW6jHive\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506108fa806100206000396000f3fe6080604052600436106100495760003560e01c80622088ce1461004e5780631ddec3601461008b5780638a1a4f38146100c8578063db580894146100e4578063fd91a80214610121575b600080fd5b34801561005a57600080fd5b50610075600480360381019061007091906105f7565b61014a565b604051610082919061077e565b60405180910390f35b34801561009757600080fd5b506100b260048036038101906100ad91906105f7565b61017d565b6040516100bf919061077e565b60405180910390f35b6100e260048036038101906100dd91906105f7565b6101b0565b005b3480156100f057600080fd5b5061010b600480360381019061010691906105f7565b6103c7565b6040516101189190610799565b60405180910390f35b34801561012d57600080fd5b50610148600480360381019061014391906105f7565b6103e7565b005b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024990610814565b60405180910390fd5b6001600082815260200190815260200160002060009054906101000a900460ff16156102b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102aa90610834565b60405180910390fd5b600034116102f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ed906107b4565b60405180910390fd5b3360008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600180600083815260200190815260200160002060006101000a81548160ff021916908315150217905550336002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60016020528060005260406000206000915054906101000a900460ff1681565b3373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047e906107d4565b60405180910390fd5b6001600082815260200190815260200160002060009054906101000a900460ff166104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de906107f4565b60405180910390fd5b600080600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006001600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156105de573d6000803e3d6000fd5b5050565b6000813590506105f1816108ad565b92915050565b60006020828403121561060957600080fd5b6000610617848285016105e2565b91505092915050565b61062981610865565b82525050565b61063881610877565b82525050565b600061064b601383610854565b91507f496e76616c69642072656e7420616d6f756e74000000000000000000000000006000830152602082019050919050565b600061068b601583610854565b91507f596f7520617265206e6f7420746865206f776e657200000000000000000000006000830152602082019050919050565b60006106cb601583610854565b91507f56656869636c65206973206e6f742072656e74656400000000000000000000006000830152602082019050919050565b600061070b601683610854565b91507f56656869636c65206e6f742072656769737465726564000000000000000000006000830152602082019050919050565b600061074b601683610854565b91507f56656869636c6520616c72656164792072656e746564000000000000000000006000830152602082019050919050565b60006020820190506107936000830184610620565b92915050565b60006020820190506107ae600083018461062f565b92915050565b600060208201905081810360008301526107cd8161063e565b9050919050565b600060208201905081810360008301526107ed8161067e565b9050919050565b6000602082019050818103600083015261080d816106be565b9050919050565b6000602082019050818103600083015261082d816106fe565b9050919050565b6000602082019050818103600083015261084d8161073e565b9050919050565b600082825260208201905092915050565b600061087082610883565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6108b6816108a3565b81146108c157600080fd5b5056fea26469706673582212207b860e97c02581909962cfe979bcee9f6fe5338fae096933544db80ed8995c2664736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100495760003560e01c80622088ce1461004e5780631ddec3601461008b5780638a1a4f38146100c8578063db580894146100e4578063fd91a80214610121575b600080fd5b34801561005a57600080fd5b50610075600480360381019061007091906105f7565b61014a565b604051610082919061077e565b60405180910390f35b34801561009757600080fd5b506100b260048036038101906100ad91906105f7565b61017d565b6040516100bf919061077e565b60405180910390f35b6100e260048036038101906100dd91906105f7565b6101b0565b005b3480156100f057600080fd5b5061010b600480360381019061010691906105f7565b6103c7565b6040516101189190610799565b60405180910390f35b34801561012d57600080fd5b50610148600480360381019061014391906105f7565b6103e7565b005b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024990610814565b60405180910390fd5b6001600082815260200190815260200160002060009054906101000a900460ff16156102b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102aa90610834565b60405180910390fd5b600034116102f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ed906107b4565b60405180910390fd5b3360008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600180600083815260200190815260200160002060006101000a81548160ff021916908315150217905550336002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60016020528060005260406000206000915054906101000a900460ff1681565b3373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047e906107d4565b60405180910390fd5b6001600082815260200190815260200160002060009054906101000a900460ff166104e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104de906107f4565b60405180910390fd5b600080600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060006001600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156105de573d6000803e3d6000fd5b5050565b6000813590506105f1816108ad565b92915050565b60006020828403121561060957600080fd5b6000610617848285016105e2565b91505092915050565b61062981610865565b82525050565b61063881610877565b82525050565b600061064b601383610854565b91507f496e76616c69642072656e7420616d6f756e74000000000000000000000000006000830152602082019050919050565b600061068b601583610854565b91507f596f7520617265206e6f7420746865206f776e657200000000000000000000006000830152602082019050919050565b60006106cb601583610854565b91507f56656869636c65206973206e6f742072656e74656400000000000000000000006000830152602082019050919050565b600061070b601683610854565b91507f56656869636c65206e6f742072656769737465726564000000000000000000006000830152602082019050919050565b600061074b601683610854565b91507f56656869636c6520616c72656164792072656e746564000000000000000000006000830152602082019050919050565b60006020820190506107936000830184610620565b92915050565b60006020820190506107ae600083018461062f565b92915050565b600060208201905081810360008301526107cd8161063e565b9050919050565b600060208201905081810360008301526107ed8161067e565b9050919050565b6000602082019050818103600083015261080d816106be565b9050919050565b6000602082019050818103600083015261082d816106fe565b9050919050565b6000602082019050818103600083015261084d8161073e565b9050919050565b600082825260208201905092915050565b600061087082610883565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6108b6816108a3565b81146108c157600080fd5b5056fea26469706673582212207b860e97c02581909962cfe979bcee9f6fe5338fae096933544db80ed8995c2664736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5566:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:11",
                "type": ""
              }
            ],
            "src": "7:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:196:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "276:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "290:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "305:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "309:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "334:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "369:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "380:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "344:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:11",
                "type": ""
              }
            ],
            "src": "152:262:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "485:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "502:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "525:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "507:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "507:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "495:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "480:3:11",
                "type": ""
              }
            ],
            "src": "420:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "603:50:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "620:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "640:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "625:14:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "625:21:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "613:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "613:34:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "613:34:11"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "598:3:11",
                "type": ""
              }
            ],
            "src": "544:109:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "805:171:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "815:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "881:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "886:2:11",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "822:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "822:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "815:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "910:3:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "915:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "906:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "906:11:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "919:21:11",
                        "type": "",
                        "value": "Invalid rent amount"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "899:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "899:42:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "899:42:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "951:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "962:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "967:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "958:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "958:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "951:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4ad0009f7635e727382805e498d62079b456a848d001fc5161f135018b8cef18_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "793:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "801:3:11",
                "type": ""
              }
            ],
            "src": "659:317:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1128:173:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1138:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1204:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1209:2:11",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1145:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1145:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1138:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1233:3:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1238:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1229:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1229:11:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1242:23:11",
                        "type": "",
                        "value": "You are not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1222:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1222:44:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1222:44:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1276:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1287:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1292:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1283:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1283:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1276:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1116:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1124:3:11",
                "type": ""
              }
            ],
            "src": "982:319:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1453:173:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1463:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1529:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1534:2:11",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1470:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1470:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1463:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1558:3:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1563:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1554:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1554:11:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1567:23:11",
                        "type": "",
                        "value": "Vehicle is not rented"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1547:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1547:44:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1547:44:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1601:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1612:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1617:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1608:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1608:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1601:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8e24f366ecc63db09e8fc31c7f3a1a3410dd051ae46dc822405d29a0c3794fcb_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1441:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1449:3:11",
                "type": ""
              }
            ],
            "src": "1307:319:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1778:174:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1788:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1854:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1859:2:11",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1795:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1795:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1788:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1883:3:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1888:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1879:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1879:11:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1892:24:11",
                        "type": "",
                        "value": "Vehicle not registered"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1872:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1872:45:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1872:45:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1927:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1938:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1943:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1934:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1934:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1927:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a91c9f81e9feb710f18005dba909bf9f6dc78a9b082739b042458d7a998ca6ab_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1766:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1774:3:11",
                "type": ""
              }
            ],
            "src": "1632:320:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2104:174:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2114:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2180:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2185:2:11",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2121:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2121:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2114:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2209:3:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2214:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2205:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2205:11:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2218:24:11",
                        "type": "",
                        "value": "Vehicle already rented"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2198:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2198:45:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2198:45:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2253:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2264:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2269:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2260:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2260:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2253:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d42ec57a87dfe18dddba60b19ec8af6c25d968771d38ad90dfd4ceb366a6d63f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2092:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2100:3:11",
                "type": ""
              }
            ],
            "src": "1958:320:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2382:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2392:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2404:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2415:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2400:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2400:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2392:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2472:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2485:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2496:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2481:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2481:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2428:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2428:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2428:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2354:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2366:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2377:4:11",
                "type": ""
              }
            ],
            "src": "2284:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2604:118:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2614:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2626:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2637:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2622:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2622:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2614:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2688:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2701:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2712:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2697:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2697:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2650:37:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2650:65:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2650:65:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2576:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2588:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2599:4:11",
                "type": ""
              }
            ],
            "src": "2512:210:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2899:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2909:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2921:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2932:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2917:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2917:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2909:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2956:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2967:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2952:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2952:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2975:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2981:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2971:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2971:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2945:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2945:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2945:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3001:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3135:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4ad0009f7635e727382805e498d62079b456a848d001fc5161f135018b8cef18_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3009:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3009:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3001:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4ad0009f7635e727382805e498d62079b456a848d001fc5161f135018b8cef18__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2879:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2894:4:11",
                "type": ""
              }
            ],
            "src": "2728:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3324:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3334:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3346:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3357:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3342:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3342:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3334:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3381:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3392:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3377:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3377:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3400:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3406:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3396:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3396:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3370:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3370:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3370:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3426:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3560:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3434:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3434:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3426:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3304:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3319:4:11",
                "type": ""
              }
            ],
            "src": "3153:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3749:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3759:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3771:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3782:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3767:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3767:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3759:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3806:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3817:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3802:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3802:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3825:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3831:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3821:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3821:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3795:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3795:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3795:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3851:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3985:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8e24f366ecc63db09e8fc31c7f3a1a3410dd051ae46dc822405d29a0c3794fcb_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3859:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3859:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3851:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8e24f366ecc63db09e8fc31c7f3a1a3410dd051ae46dc822405d29a0c3794fcb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3729:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3744:4:11",
                "type": ""
              }
            ],
            "src": "3578:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4174:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4184:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4196:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4207:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4192:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4192:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4184:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4231:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4242:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4227:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4227:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4250:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4256:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4246:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4246:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4220:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4220:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4220:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4276:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4410:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a91c9f81e9feb710f18005dba909bf9f6dc78a9b082739b042458d7a998ca6ab_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4284:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4284:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4276:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a91c9f81e9feb710f18005dba909bf9f6dc78a9b082739b042458d7a998ca6ab__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4154:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4169:4:11",
                "type": ""
              }
            ],
            "src": "4003:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4599:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4609:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4621:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4632:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4617:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4617:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4609:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4656:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4667:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4652:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4652:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4675:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4681:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4671:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4671:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4645:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4645:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4645:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4701:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4835:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d42ec57a87dfe18dddba60b19ec8af6c25d968771d38ad90dfd4ceb366a6d63f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4709:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4709:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4701:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d42ec57a87dfe18dddba60b19ec8af6c25d968771d38ad90dfd4ceb366a6d63f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4579:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4594:4:11",
                "type": ""
              }
            ],
            "src": "4428:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4949:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4966:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4971:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4959:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4959:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4959:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4987:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5006:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5011:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5002:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5002:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4987:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4921:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4926:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4937:11:11",
                "type": ""
              }
            ],
            "src": "4853:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5073:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5083:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5112:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "5094:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5094:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5083:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5055:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5065:7:11",
                "type": ""
              }
            ],
            "src": "5028:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5172:48:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5182:32:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5207:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5200:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5200:13:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5193:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5193:21:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5182:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5154:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5164:7:11",
                "type": ""
              }
            ],
            "src": "5130:90:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5271:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5281:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5296:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5303:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5292:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5292:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5281:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5253:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5263:7:11",
                "type": ""
              }
            ],
            "src": "5226:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5403:32:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5413:16:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5424:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5413:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5385:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5395:7:11",
                "type": ""
              }
            ],
            "src": "5358:77:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5484:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5541:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5550:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5553:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5543:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5543:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5543:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5507:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5532:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "5514:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5514:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5504:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5504:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5497:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5497:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "5494:2:11"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5477:5:11",
                "type": ""
              }
            ],
            "src": "5441:122:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_4ad0009f7635e727382805e498d62079b456a848d001fc5161f135018b8cef18_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n\n        mstore(add(pos, 0), \"Invalid rent amount\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n\n        mstore(add(pos, 0), \"You are not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8e24f366ecc63db09e8fc31c7f3a1a3410dd051ae46dc822405d29a0c3794fcb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n\n        mstore(add(pos, 0), \"Vehicle is not rented\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a91c9f81e9feb710f18005dba909bf9f6dc78a9b082739b042458d7a998ca6ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n\n        mstore(add(pos, 0), \"Vehicle not registered\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d42ec57a87dfe18dddba60b19ec8af6c25d968771d38ad90dfd4ceb366a6d63f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n\n        mstore(add(pos, 0), \"Vehicle already rented\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4ad0009f7635e727382805e498d62079b456a848d001fc5161f135018b8cef18__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4ad0009f7635e727382805e498d62079b456a848d001fc5161f135018b8cef18_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e24f366ecc63db09e8fc31c7f3a1a3410dd051ae46dc822405d29a0c3794fcb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e24f366ecc63db09e8fc31c7f3a1a3410dd051ae46dc822405d29a0c3794fcb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a91c9f81e9feb710f18005dba909bf9f6dc78a9b082739b042458d7a998ca6ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a91c9f81e9feb710f18005dba909bf9f6dc78a9b082739b042458d7a998ca6ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d42ec57a87dfe18dddba60b19ec8af6c25d968771d38ad90dfd4ceb366a6d63f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d42ec57a87dfe18dddba60b19ec8af6c25d968771d38ad90dfd4ceb366a6d63f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "60:1012:10:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "60:1012:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;91:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;200:49;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;258:419;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;146:47;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;685:384;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;91:48;;;;;;;;;;;;;;;;;;;;;;:::o;200:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;258:419::-;370:1;334:38;;:13;:24;348:9;334:24;;;;;;;;;;;;;;;;;;;;;:38;;;;326:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;419:15;:26;435:9;419:26;;;;;;;;;;;;;;;;;;;;;418:27;410:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;503:1;491:9;:13;483:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;566:10;539:13;:24;553:9;539:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;616:4;587:15;:26;603:9;587:26;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;659:10;631:14;:25;646:9;631:25;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;258:419;:::o;146:47::-;;;;;;;;;;;;;;;;;;;;;;:::o;685:384::-;784:10;756:38;;:13;:24;770:9;756:24;;;;;;;;;;;;;;;;;;;;;:38;;;748:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;839:15;:26;855:9;839:26;;;;;;;;;;;;;;;;;;;;;831:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;937:1;902:13;:24;916:9;902:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;979:5;950:15;:26;966:9;950:26;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;1003:14;:25;1018:9;1003:25;;;;;;;;;;;;;;;;;;;;;995:43;;:66;1039:21;995:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:384;:::o;7:139:11:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:109::-;625:21;640:5;625:21;:::i;:::-;620:3;613:34;603:50;;:::o;659:317::-;;822:67;886:2;881:3;822:67;:::i;:::-;815:74;;919:21;915:1;910:3;906:11;899:42;967:2;962:3;958:12;951:19;;805:171;;;:::o;982:319::-;;1145:67;1209:2;1204:3;1145:67;:::i;:::-;1138:74;;1242:23;1238:1;1233:3;1229:11;1222:44;1292:2;1287:3;1283:12;1276:19;;1128:173;;;:::o;1307:319::-;;1470:67;1534:2;1529:3;1470:67;:::i;:::-;1463:74;;1567:23;1563:1;1558:3;1554:11;1547:44;1617:2;1612:3;1608:12;1601:19;;1453:173;;;:::o;1632:320::-;;1795:67;1859:2;1854:3;1795:67;:::i;:::-;1788:74;;1892:24;1888:1;1883:3;1879:11;1872:45;1943:2;1938:3;1934:12;1927:19;;1778:174;;;:::o;1958:320::-;;2121:67;2185:2;2180:3;2121:67;:::i;:::-;2114:74;;2218:24;2214:1;2209:3;2205:11;2198:45;2269:2;2264:3;2260:12;2253:19;;2104:174;;;:::o;2284:222::-;;2415:2;2404:9;2400:18;2392:26;;2428:71;2496:1;2485:9;2481:17;2472:6;2428:71;:::i;:::-;2382:124;;;;:::o;2512:210::-;;2637:2;2626:9;2622:18;2614:26;;2650:65;2712:1;2701:9;2697:17;2688:6;2650:65;:::i;:::-;2604:118;;;;:::o;2728:419::-;;2932:2;2921:9;2917:18;2909:26;;2981:9;2975:4;2971:20;2967:1;2956:9;2952:17;2945:47;3009:131;3135:4;3009:131;:::i;:::-;3001:139;;2899:248;;;:::o;3153:419::-;;3357:2;3346:9;3342:18;3334:26;;3406:9;3400:4;3396:20;3392:1;3381:9;3377:17;3370:47;3434:131;3560:4;3434:131;:::i;:::-;3426:139;;3324:248;;;:::o;3578:419::-;;3782:2;3771:9;3767:18;3759:26;;3831:9;3825:4;3821:20;3817:1;3806:9;3802:17;3795:47;3859:131;3985:4;3859:131;:::i;:::-;3851:139;;3749:248;;;:::o;4003:419::-;;4207:2;4196:9;4192:18;4184:26;;4256:9;4250:4;4246:20;4242:1;4231:9;4227:17;4220:47;4284:131;4410:4;4284:131;:::i;:::-;4276:139;;4174:248;;;:::o;4428:419::-;;4632:2;4621:9;4617:18;4609:26;;4681:9;4675:4;4671:20;4667:1;4656:9;4652:17;4645:47;4709:131;4835:4;4709:131;:::i;:::-;4701:139;;4599:248;;;:::o;4853:169::-;;4971:6;4966:3;4959:19;5011:4;5006:3;5002:14;4987:29;;4949:73;;;;:::o;5028:96::-;;5094:24;5112:5;5094:24;:::i;:::-;5083:35;;5073:51;;;:::o;5130:90::-;;5207:5;5200:13;5193:21;5182:32;;5172:48;;;:::o;5226:126::-;;5303:42;5296:5;5292:54;5281:65;;5271:81;;;:::o;5358:77::-;;5424:5;5413:16;;5403:32;;;:::o;5441:122::-;5514:24;5532:5;5514:24;:::i;:::-;5507:5;5504:35;5494:2;;5553:1;5550;5543:12;5494:2;5484:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract VehicleRenting {\r\n    mapping(uint256 => address) public vehicleOwners;\r\n    mapping(uint256 => bool) public vehicleIsRented;\r\n    mapping(uint256 => address) public vehicleRenters;\r\n\r\n    function rentVehicle(uint256 vehicleId) external payable {\r\n        require(vehicleOwners[vehicleId] != address(0), \"Vehicle not registered\");\r\n        require(!vehicleIsRented[vehicleId], \"Vehicle already rented\");\r\n        require(msg.value > 0, \"Invalid rent amount\");\r\n        vehicleOwners[vehicleId] = msg.sender;\r\n        vehicleIsRented[vehicleId] = true;\r\n        vehicleRenters[vehicleId] = msg.sender;\r\n    }\r\n\r\n    function endVehicleRent(uint256 vehicleId) external {\r\n        require(vehicleOwners[vehicleId] == msg.sender, \"You are not the owner\");\r\n        require(vehicleIsRented[vehicleId], \"Vehicle is not rented\");\r\n        vehicleOwners[vehicleId] = address(0);\r\n        vehicleIsRented[vehicleId] = false;\r\n        payable(vehicleRenters[vehicleId]).transfer(address(this).balance);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\admin\\OneDrive\\Desktop\\AssetHub\\contract\\contracts\\VehicleRenting.sol",
  "ast": {
    "absolutePath": "project:/contracts/VehicleRenting.sol",
    "exportedSymbols": {
      "VehicleRenting": [
        1061
      ]
    },
    "id": 1062,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 942,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:10"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1061,
        "linearizedBaseContracts": [
          1061
        ],
        "name": "VehicleRenting",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "002088ce",
            "id": 946,
            "mutability": "mutable",
            "name": "vehicleOwners",
            "nodeType": "VariableDeclaration",
            "scope": 1061,
            "src": "91:48:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 945,
              "keyType": {
                "id": 943,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "99:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "91:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 944,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "110:7:10",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "db580894",
            "id": 950,
            "mutability": "mutable",
            "name": "vehicleIsRented",
            "nodeType": "VariableDeclaration",
            "scope": 1061,
            "src": "146:47:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 949,
              "keyType": {
                "id": 947,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "154:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "146:24:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 948,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "165:4:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1ddec360",
            "id": 954,
            "mutability": "mutable",
            "name": "vehicleRenters",
            "nodeType": "VariableDeclaration",
            "scope": 1061,
            "src": "200:49:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 953,
              "keyType": {
                "id": 951,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "208:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "200:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 952,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "219:7:10",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1007,
              "nodeType": "Block",
              "src": "315:362:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 960,
                            "name": "vehicleOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "334:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 962,
                          "indexExpression": {
                            "id": 961,
                            "name": "vehicleId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 956,
                            "src": "348:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "334:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "370:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "362:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 963,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "362:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "362:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "334:38:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56656869636c65206e6f742072656769737465726564",
                        "id": 968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "374:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a91c9f81e9feb710f18005dba909bf9f6dc78a9b082739b042458d7a998ca6ab",
                          "typeString": "literal_string \"Vehicle not registered\""
                        },
                        "value": "Vehicle not registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a91c9f81e9feb710f18005dba909bf9f6dc78a9b082739b042458d7a998ca6ab",
                          "typeString": "literal_string \"Vehicle not registered\""
                        }
                      ],
                      "id": 959,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "326:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "326:73:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 970,
                  "nodeType": "ExpressionStatement",
                  "src": "326:73:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "418:27:10",
                        "subExpression": {
                          "baseExpression": {
                            "id": 972,
                            "name": "vehicleIsRented",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 950,
                            "src": "419:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 974,
                          "indexExpression": {
                            "id": 973,
                            "name": "vehicleId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 956,
                            "src": "435:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "419:26:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56656869636c6520616c72656164792072656e746564",
                        "id": 976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "447:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d42ec57a87dfe18dddba60b19ec8af6c25d968771d38ad90dfd4ceb366a6d63f",
                          "typeString": "literal_string \"Vehicle already rented\""
                        },
                        "value": "Vehicle already rented"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d42ec57a87dfe18dddba60b19ec8af6c25d968771d38ad90dfd4ceb366a6d63f",
                          "typeString": "literal_string \"Vehicle already rented\""
                        }
                      ],
                      "id": 971,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "410:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "410:62:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 978,
                  "nodeType": "ExpressionStatement",
                  "src": "410:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 980,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "491:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "491:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "503:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "491:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642072656e7420616d6f756e74",
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "506:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ad0009f7635e727382805e498d62079b456a848d001fc5161f135018b8cef18",
                          "typeString": "literal_string \"Invalid rent amount\""
                        },
                        "value": "Invalid rent amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ad0009f7635e727382805e498d62079b456a848d001fc5161f135018b8cef18",
                          "typeString": "literal_string \"Invalid rent amount\""
                        }
                      ],
                      "id": 979,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "483:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "483:45:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 986,
                  "nodeType": "ExpressionStatement",
                  "src": "483:45:10"
                },
                {
                  "expression": {
                    "id": 992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 987,
                        "name": "vehicleOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 946,
                        "src": "539:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 989,
                      "indexExpression": {
                        "id": 988,
                        "name": "vehicleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "553:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "539:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 990,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "566:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "566:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "539:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 993,
                  "nodeType": "ExpressionStatement",
                  "src": "539:37:10"
                },
                {
                  "expression": {
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 994,
                        "name": "vehicleIsRented",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 950,
                        "src": "587:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 996,
                      "indexExpression": {
                        "id": 995,
                        "name": "vehicleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "603:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "587:26:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "616:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "587:33:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 999,
                  "nodeType": "ExpressionStatement",
                  "src": "587:33:10"
                },
                {
                  "expression": {
                    "id": 1005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1000,
                        "name": "vehicleRenters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 954,
                        "src": "631:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1002,
                      "indexExpression": {
                        "id": 1001,
                        "name": "vehicleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 956,
                        "src": "646:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "631:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1003,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "659:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "659:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "631:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1006,
                  "nodeType": "ExpressionStatement",
                  "src": "631:38:10"
                }
              ]
            },
            "functionSelector": "8a1a4f38",
            "id": 1008,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rentVehicle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 956,
                  "mutability": "mutable",
                  "name": "vehicleId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1008,
                  "src": "279:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "279:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "278:19:10"
            },
            "returnParameters": {
              "id": 958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "315:0:10"
            },
            "scope": 1061,
            "src": "258:419:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1059,
              "nodeType": "Block",
              "src": "737:332:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1014,
                            "name": "vehicleOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "756:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 1016,
                          "indexExpression": {
                            "id": 1015,
                            "name": "vehicleId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1010,
                            "src": "770:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "756:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1017,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "784:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "784:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "756:38:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420746865206f776e6572",
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "796:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
                          "typeString": "literal_string \"You are not the owner\""
                        },
                        "value": "You are not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
                          "typeString": "literal_string \"You are not the owner\""
                        }
                      ],
                      "id": 1013,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "748:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "748:72:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "748:72:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1024,
                          "name": "vehicleIsRented",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 950,
                          "src": "839:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                            "typeString": "mapping(uint256 => bool)"
                          }
                        },
                        "id": 1026,
                        "indexExpression": {
                          "id": 1025,
                          "name": "vehicleId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1010,
                          "src": "855:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "839:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56656869636c65206973206e6f742072656e746564",
                        "id": 1027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "867:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e24f366ecc63db09e8fc31c7f3a1a3410dd051ae46dc822405d29a0c3794fcb",
                          "typeString": "literal_string \"Vehicle is not rented\""
                        },
                        "value": "Vehicle is not rented"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e24f366ecc63db09e8fc31c7f3a1a3410dd051ae46dc822405d29a0c3794fcb",
                          "typeString": "literal_string \"Vehicle is not rented\""
                        }
                      ],
                      "id": 1023,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "831:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "831:60:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1029,
                  "nodeType": "ExpressionStatement",
                  "src": "831:60:10"
                },
                {
                  "expression": {
                    "id": 1037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1030,
                        "name": "vehicleOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 946,
                        "src": "902:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1032,
                      "indexExpression": {
                        "id": 1031,
                        "name": "vehicleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1010,
                        "src": "916:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "902:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "937:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "929:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1033,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "929:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "929:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "902:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1038,
                  "nodeType": "ExpressionStatement",
                  "src": "902:37:10"
                },
                {
                  "expression": {
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1039,
                        "name": "vehicleIsRented",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 950,
                        "src": "950:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 1041,
                      "indexExpression": {
                        "id": 1040,
                        "name": "vehicleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1010,
                        "src": "966:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "950:26:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "979:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "950:34:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1044,
                  "nodeType": "ExpressionStatement",
                  "src": "950:34:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1054,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "1047:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VehicleRenting_$1061",
                                "typeString": "contract VehicleRenting"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_VehicleRenting_$1061",
                                "typeString": "contract VehicleRenting"
                              }
                            ],
                            "id": 1053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1039:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1052,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1039:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1039:13:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1039:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 1047,
                              "name": "vehicleRenters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 954,
                              "src": "1003:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 1049,
                            "indexExpression": {
                              "id": 1048,
                              "name": "vehicleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1010,
                              "src": "1018:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1003:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "995:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1045,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "995:8:10",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "995:34:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "995:43:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "995:66:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1058,
                  "nodeType": "ExpressionStatement",
                  "src": "995:66:10"
                }
              ]
            },
            "functionSelector": "fd91a802",
            "id": 1060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "endVehicleRent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1010,
                  "mutability": "mutable",
                  "name": "vehicleId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1060,
                  "src": "709:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "709:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "708:19:10"
            },
            "returnParameters": {
              "id": 1012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "737:0:10"
            },
            "scope": 1061,
            "src": "685:384:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1062,
        "src": "60:1012:10"
      }
    ],
    "src": "33:1041:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "1706817719748": {
      "events": {},
      "links": {},
      "address": "0xc1971F06B030e922c2b68CC83a654a8F7ecB049D",
      "transactionHash": "0x603f65f31ff61a4a6d278b187b803856d835062e08e96d4c44f24097d654c97c"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-02-01T20:02:38.696Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}