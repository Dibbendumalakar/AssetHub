{
  "contractName": "LandRegistration",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "landOwners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "landId",
          "type": "uint256"
        }
      ],
      "name": "registerLand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"landOwners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"landId\",\"type\":\"uint256\"}],\"name\":\"registerLand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/LandRegistration.sol\":\"LandRegistration\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/LandRegistration.sol\":{\"keccak256\":\"0x18f1140273a0b05e5a6735e316089cb661616b9e8437b513c26bb61f933261ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a4d1ef7a510f4bad2db299068cfed4fc061f1852a97836a3ed79b3f8284ca72\",\"dweb:/ipfs/Qmf6T28ECoPMK4tb7TTPHvnaiwn9Uofim86t3viiNeWX9U\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610311806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631a0f76b11461003b578063baadce901461006b575b600080fd5b610055600480360381019061005091906101c4565b610087565b604051610062919061023c565b60405180910390f35b610085600480360381019061008091906101c4565b6100ba565b005b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461015b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015290610257565b60405180910390fd5b3360008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506101be816102c4565b92915050565b6000602082840312156101d657600080fd5b60006101e4848285016101af565b91505092915050565b6101f681610288565b82525050565b6000610209601783610277565b91507f4c616e6420616c726561647920726567697374657265640000000000000000006000830152602082019050919050565b600060208201905061025160008301846101ed565b92915050565b60006020820190508181036000830152610270816101fc565b9050919050565b600082825260208201905092915050565b60006102938261029a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6102cd816102ba565b81146102d857600080fd5b5056fea2646970667358221220784aa70bf08ea1c0558ddeb5f48ba53d67455394c2a8bd4c221d730343ed767364736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80631a0f76b11461003b578063baadce901461006b575b600080fd5b610055600480360381019061005091906101c4565b610087565b604051610062919061023c565b60405180910390f35b610085600480360381019061008091906101c4565b6100ba565b005b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461015b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015290610257565b60405180910390fd5b3360008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506101be816102c4565b92915050565b6000602082840312156101d657600080fd5b60006101e4848285016101af565b91505092915050565b6101f681610288565b82525050565b6000610209601783610277565b91507f4c616e6420616c726561647920726567697374657265640000000000000000006000830152602082019050919050565b600060208201905061025160008301846101ed565b92915050565b60006020820190508181036000830152610270816101fc565b9050919050565b600082825260208201905092915050565b60006102938261029a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6102cd816102ba565b81146102d857600080fd5b5056fea2646970667358221220784aa70bf08ea1c0558ddeb5f48ba53d67455394c2a8bd4c221d730343ed767364736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2141:11",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:11"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:11",
                "type": ""
              }
            ],
            "src": "7:139:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:196:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "276:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:11"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "290:117:11",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "305:15:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:1:11",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "309:6:11",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "334:63:11",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "369:9:11"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "380:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:22:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "344:20:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:53:11"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:11"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:11",
                "type": ""
              }
            ],
            "src": "152:262:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "485:53:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "502:3:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "525:5:11"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "507:17:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "507:24:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "495:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:37:11"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "480:3:11",
                "type": ""
              }
            ],
            "src": "420:118:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "690:175:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "700:74:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "766:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "771:2:11",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "707:58:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "707:67:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "700:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "795:3:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "800:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "791:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "791:11:11"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "804:25:11",
                        "type": "",
                        "value": "Land already registered"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "784:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:46:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "784:46:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "840:19:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "851:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "856:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "847:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "847:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "840:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_314980a063dbd20859beb9fcb0bc816188da920838865ee72d56ad7f0fb5e24d_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "678:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "686:3:11",
                "type": ""
              }
            ],
            "src": "544:321:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "969:124:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "979:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "991:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1002:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "987:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "987:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "979:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1059:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1072:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1083:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1068:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1068:17:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1015:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1015:71:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1015:71:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "941:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "953:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "964:4:11",
                "type": ""
              }
            ],
            "src": "871:222:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1270:248:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1280:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1292:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1303:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1288:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1288:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1280:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1327:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1338:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1323:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1323:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1346:4:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1352:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1342:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1342:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1316:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1316:47:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1316:47:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1372:139:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1506:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_314980a063dbd20859beb9fcb0bc816188da920838865ee72d56ad7f0fb5e24d_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1380:124:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1380:131:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1372:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_314980a063dbd20859beb9fcb0bc816188da920838865ee72d56ad7f0fb5e24d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1250:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1265:4:11",
                "type": ""
              }
            ],
            "src": "1099:419:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1620:73:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1637:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1642:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1630:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1630:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1630:19:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1658:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1677:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1682:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1673:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1673:14:11"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1658:11:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1592:3:11",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1597:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1608:11:11",
                "type": ""
              }
            ],
            "src": "1524:169:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1744:51:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1754:35:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1783:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1765:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1765:24:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1754:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1726:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1736:7:11",
                "type": ""
              }
            ],
            "src": "1699:96:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1846:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1856:65:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1871:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1878:42:11",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1867:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1867:54:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1856:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1828:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1838:7:11",
                "type": ""
              }
            ],
            "src": "1801:126:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1978:32:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1988:16:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1999:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1988:7:11"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1960:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1970:7:11",
                "type": ""
              }
            ],
            "src": "1933:77:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2059:79:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2116:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2125:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2128:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2118:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2118:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2118:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2082:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2107:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2089:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2089:24:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2079:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2079:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2072:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2072:43:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2069:2:11"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2052:5:11",
                "type": ""
              }
            ],
            "src": "2016:122:11"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_314980a063dbd20859beb9fcb0bc816188da920838865ee72d56ad7f0fb5e24d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n\n        mstore(add(pos, 0), \"Land already registered\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_314980a063dbd20859beb9fcb0bc816188da920838865ee72d56ad7f0fb5e24d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_314980a063dbd20859beb9fcb0bc816188da920838865ee72d56ad7f0fb5e24d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "60:266:3:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "60:266:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;93:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;147:176;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;93:45;;;;;;;;;;;;;;;;;;;;;;:::o;147:176::-;243:1;213:32;;:10;:18;224:6;213:18;;;;;;;;;;;;;;;;;;;;;:32;;;205:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;305:10;284;:18;295:6;284:18;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;147:176;:::o;7:139:11:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:321::-;;707:67;771:2;766:3;707:67;:::i;:::-;700:74;;804:25;800:1;795:3;791:11;784:46;856:2;851:3;847:12;840:19;;690:175;;;:::o;871:222::-;;1002:2;991:9;987:18;979:26;;1015:71;1083:1;1072:9;1068:17;1059:6;1015:71;:::i;:::-;969:124;;;;:::o;1099:419::-;;1303:2;1292:9;1288:18;1280:26;;1352:9;1346:4;1342:20;1338:1;1327:9;1323:17;1316:47;1380:131;1506:4;1380:131;:::i;:::-;1372:139;;1270:248;;;:::o;1524:169::-;;1642:6;1637:3;1630:19;1682:4;1677:3;1673:14;1658:29;;1620:73;;;;:::o;1699:96::-;;1765:24;1783:5;1765:24;:::i;:::-;1754:35;;1744:51;;;:::o;1801:126::-;;1878:42;1871:5;1867:54;1856:65;;1846:81;;;:::o;1933:77::-;;1999:5;1988:16;;1978:32;;;:::o;2016:122::-;2089:24;2107:5;2089:24;:::i;:::-;2082:5;2079:35;2069:2;;2128:1;2125;2118:12;2069:2;2059:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract LandRegistration {\r\n    mapping(uint256 => address) public landOwners;\r\n\r\n    function registerLand(uint256 landId) external {\r\n        require(landOwners[landId] == address(0), \"Land already registered\");\r\n        landOwners[landId] = msg.sender;\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\admin\\OneDrive\\Desktop\\AssetHub\\contract\\contracts\\LandRegistration.sol",
  "ast": {
    "absolutePath": "project:/contracts/LandRegistration.sol",
    "exportedSymbols": {
      "LandRegistration": [
        379
      ]
    },
    "id": 380,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 349,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 379,
        "linearizedBaseContracts": [
          379
        ],
        "name": "LandRegistration",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1a0f76b1",
            "id": 353,
            "mutability": "mutable",
            "name": "landOwners",
            "nodeType": "VariableDeclaration",
            "scope": 379,
            "src": "93:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 352,
              "keyType": {
                "id": 350,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "101:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "93:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 351,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "112:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 377,
              "nodeType": "Block",
              "src": "194:129:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 359,
                            "name": "landOwners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "213:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 361,
                          "indexExpression": {
                            "id": 360,
                            "name": "landId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "224:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "213:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "243:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "235:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 362,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "235:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "235:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "213:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c616e6420616c72656164792072656769737465726564",
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "247:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_314980a063dbd20859beb9fcb0bc816188da920838865ee72d56ad7f0fb5e24d",
                          "typeString": "literal_string \"Land already registered\""
                        },
                        "value": "Land already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_314980a063dbd20859beb9fcb0bc816188da920838865ee72d56ad7f0fb5e24d",
                          "typeString": "literal_string \"Land already registered\""
                        }
                      ],
                      "id": 358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "205:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "205:68:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "205:68:3"
                },
                {
                  "expression": {
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 370,
                        "name": "landOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "284:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 372,
                      "indexExpression": {
                        "id": 371,
                        "name": "landId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "295:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "284:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 373,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "305:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "305:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "284:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "284:31:3"
                }
              ]
            },
            "functionSelector": "baadce90",
            "id": 378,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerLand",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 355,
                  "mutability": "mutable",
                  "name": "landId",
                  "nodeType": "VariableDeclaration",
                  "scope": 378,
                  "src": "169:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "169:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "168:16:3"
            },
            "returnParameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "194:0:3"
            },
            "scope": 379,
            "src": "147:176:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 380,
        "src": "60:266:3"
      }
    ],
    "src": "33:295:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "1706817719748": {
      "events": {},
      "links": {},
      "address": "0xf035980af1977C1861F9e967A34238f0cc7B03AD",
      "transactionHash": "0xbb6b23622c22b5cac1f6cc4d75f29a263b5eaad8bbbaf0656d2980000bb0064f"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-02-01T20:02:25.696Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}